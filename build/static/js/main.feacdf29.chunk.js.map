{"version":3,"sources":["Components/PhoneContacts/PhoneBook.module.css","Components/Filter/Filter.module.css","Components/Forma/InputPhonebook.module.css","redux/telbook/action.js","redux/telbook/selector.js","Components/Forma/FormPhonebook.js","Components/PhoneContacts/PhoneContacts.js","Components/Filter/Filter.js","Components/PhoneBook/PhoneBook.js","App.js","redux/telbook/reducer.js","redux/store.js","index.js","Components/PhoneBook/PhoneBook.module.css"],"names":["module","exports","addContacts","createAction","dellContacts","addFilter","getFilter","state","contacts","filter","filterContacts","createSelector","items","contact","name","toLowerCase","includes","Form","onSubmit","useState","setName","number","setNumber","handleInputChange","evt","target","value","reset","el","preventDefault","className","s","Forma","nameinput","Forma__input","id","nanoid","type","placeholder","pattern","title","required","onChange","Button__form","ContactsList","delContact","Contact__list","map","Contact__item","onClick","Button__remove","Filter","filterContact","Filter__search","Filter__input","PhoneBook","useSelector","filters","dispatch","useDispatch","availabilityContact","find","normalizedFilter","visibleContacts","PhoneBookBlock","data","alert","actions","Contacts__title","length","e","currentTarget","Filter__text","contactId","App","Container","itemReducer","createReducer","_","action","payload","filterReducer","combineReducers","persistConfig","key","storage","createLogger","rootReducer","contactsReducer","persisterReducer","persistReducer","store","configureStore","reducer","middleware","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.feacdf29.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact__list\":\"PhoneBook_Contact__list__39gFN\",\"Contact__item\":\"PhoneBook_Contact__item__3HOKz\",\"Button__remove\":\"PhoneBook_Button__remove__J888H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter__search\":\"Filter_Filter__search__26RSF\",\"Filter__input\":\"Filter_Filter__input__3v6lu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Forma\":\"InputPhonebook_Forma__3orIP\",\"Forma__input\":\"InputPhonebook_Forma__input__1es7_\",\"nameinput\":\"InputPhonebook_nameinput__3g3SN\",\"Button__form\":\"InputPhonebook_Button__form__3p6Qc\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const addContacts = createAction(\"contacts/addContacts\");\nexport const dellContacts = createAction(\"contacts/dellContacts\");\nexport const addFilter = createAction(\"contacts/addFilter\");\n","import { createSelector } from \"reselect\";\nexport const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\nexport const filterContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import React, { useState } from \"react\";\nimport s from \"./InputPhonebook.module.css\";\nimport { nanoid } from \"nanoid\";\n\nconst Form = ({ onSubmit }) => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleInputChange = (evt) => {\n    const { name, value } = evt.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (el) => {\n    el.preventDefault();\n    onSubmit({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={s.Forma}>\n        <label className={s.nameinput} />\n        Name\n        <input\n          className={s.Forma__input}\n          id={nanoid()}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Ivan Petrov\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleInputChange}\n        />\n        <label className={s.nameinput} />\n        Number\n        <input\n          className={s.Forma__input}\n          id={nanoid()}\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          placeholder=\"+380990000000\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleInputChange}\n        />\n        <button type=\"submit\" className={s.Button__form}>\n          Add Contact\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./PhoneBook.module.css\";\nconst ContactsList = ({ contacts = [], delContact }) => {\n  return (\n    <ul className={s.Contact__list}>\n      {contacts.map((el) => (\n        <li key={el.id} className={s.Contact__item}>\n          <span>\n            {el.name} : {el.number}\n          </span>\n          <button\n            type=\"button\"\n            onClick={() => delContact(el.id)}\n            className={s.Button__remove}\n          >\n            Remove\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\nContactsList.propTypes = {\n  contactsList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default ContactsList;\n","import React from 'react';\nimport s from './Filter.module.css';\nconst Filter = ({ filterContact, value }) => {\n  return (\n    <div>\n      <form className={s.Filter__search}>\n        <label>Search</label>\n        <input\n          className={s.Filter__input}\n          value={value}\n          onChange={filterContact}\n          placeholder=\"Enter your name\"\n        ></input>\n      </form>\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport * as actions from \"../../redux/telbook/action\";\nimport { filterContacts, getFilter } from \"../../redux/telbook/selector.js\";\nimport Form from \"../Forma/FormPhonebook\";\nimport ContactsList from \"../PhoneContacts/PhoneContacts\";\nimport Filter from \"../Filter/Filter\";\nimport s from \"./PhoneBook.module.css\";\nimport { nanoid } from \"nanoid\";\nfunction PhoneBook() {\n  const contacts = useSelector(filterContacts);\n  const filters = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onSubmit = (data) => {\n    const contact = {\n      id: nanoid(),\n      name: data.name,\n      number: data.number,\n    };\n    if (availabilityContact(contact.name)) {\n      return alert(`Name ${contact.name}already on your list\n      `);\n    } else {\n      dispatch(actions.addContacts([...contacts, { ...contact }]));\n    }\n  };\n\n  const availabilityContact = (value) => {\n    return contacts.find((el) => el.name === value);\n  };\n\n  const delContact = (contactId) => {\n    dispatch(actions.dellContacts(contactId));\n  };\n  const filterContact = (e) => {\n    const { value } = e.currentTarget;\n    dispatch(actions.addFilter(value));\n  };\n\n  const normalizedFilter = filters.toLowerCase();\n  const visibleContacts = contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <>\n      <div className={s.PhoneBookBlock}>\n        <Form onSubmit={onSubmit} />\n      </div>\n      <div>\n        <div>\n          <h2 className={s.Contacts__title}>Contacts</h2>\n          {contacts.length > 0 ? (\n            <Filter filterContact={filterContact} value={filters} />\n          ) : (\n            <p className={s.Filter__text}>No contacts🙁</p>\n          )}\n        </div>\n        <ContactsList contacts={visibleContacts} delContact={delContact} />\n      </div>\n    </>\n  );\n}\nexport default PhoneBook;\n","import PhoneBook from \"./Components/PhoneBook/PhoneBook\";\nimport s from \"./Components/PhoneBook/PhoneBook.module.css\";\nfunction App() {\n  return (\n    <div className={s.Container}>\n      <PhoneBook />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { addContacts, addFilter, dellContacts } from \"./action\";\n\nconst itemReducer = createReducer([], {\n  [addContacts]: (_, action) => action.payload,\n  [dellContacts]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\n\nconst filterReducer = createReducer(\"\", {\n  [addFilter]: (_, action) => action.payload,\n});\nexport default combineReducers({\n  items: itemReducer,\n  filter: filterReducer,\n});\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\n// import logger from \"redux-logger\";\nimport { createLogger } from \"redux-logger\";\nimport contactsReducer from \"../redux/telbook/reducer\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  REGISTER,\n  PURGE,\n  PERSIST,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nconst persistConfig = {\n  key: \"contacts\",\n  storage,\n};\nconst logger = createLogger();\nlet middleware = [];\nif (process.env.NODE_ENV === \"development\") {\n  middleware = (getDefaultMiddleware) => [\n    ...getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n    logger,\n  ];\n}\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\nconst persisterReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persisterReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"modern-normalize\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"PhoneBook_Container__2wQ_Z\",\"Contacts__title\":\"PhoneBook_Contacts__title__1uPsK\",\"Filter__text\":\"PhoneBook_Filter__text__3_4v4\"};"],"sourceRoot":""}